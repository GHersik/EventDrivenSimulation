<Window x:Class="SimulationWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimulationWindow"
        mc:Ignorable="d"
        Title="Simulation" Height="760" Width="1080" ResizeMode="NoResize" Background="Black"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <!--MyComboBoxStyle-->
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="#FF4D96FF" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="#FF4D96FF" OpacityMask="#FF4D96FF">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxEventDrivenSimulation" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <!--Simulation-->
    <Canvas Name="Render" Height="500" Width="500" Background="Black" Focusable="True" 
           VerticalAlignment="Bottom" HorizontalAlignment="Left" MouseLeftButtonDown="TrackParticlep1" MouseRightButtonDown="TrackParticlep2" Margin="450,0,0,104">
        <!--Title-->
        <TextBlock FontSize="20" Foreground="White" FontFamily="Press Start 2P"  FontWeight="DemiBold"   Canvas.Top="-86" TextAlignment="Center"  TextWrapping="WrapWithOverflow" HorizontalAlignment="Left" Height="46" VerticalAlignment="Center" Width="520" Canvas.Left="-184">Event Driven Simulation</TextBlock>

        <!--Particles on a scene-->
        <TextBlock  FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="-38" TextAlignment="left"  TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" Height="25" VerticalAlignment="Top" Width="162" Canvas.Left="-351" FontFamily="Roboto Mono">Particles on a scene</TextBlock>
        <TextBlock x:Name="ParticlesCounter" FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="-38" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="50" Canvas.Left="-213" HorizontalAlignment="Center" VerticalAlignment="Top" FontFamily="Roboto Mono"><Run Language="pl-pl" Text="0"/></TextBlock>
        <!--Collisions per second-->
        <TextBlock  FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="-16" TextAlignment="left"  TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" Height="25" VerticalAlignment="Top" Width="162" Canvas.Left="-351" FontFamily="Roboto Mono">Collisions per second</TextBlock>
        <TextBlock x:Name="CollisionsCounter" FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="-16" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="65" Canvas.Left="-205" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Roboto Mono"><Run Language="pl-pl" Text="∞"/></TextBlock>

        <!--Matrix-->
        <Rectangle Name="Simulationborder" Width="504" Height="504" Canvas.Left="-2" StrokeThickness="3" Stroke="#FF4D96FF" Canvas.Top="-2" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <TextBlock Name="canvasMatrixTop" FontSize="15" Foreground="#FF4D96FF"  FontWeight="bold"   Canvas.Top="-22" TextAlignment="Center" Canvas.Left="-12" TextWrapping="WrapWithOverflow" Height="21" Width="48" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Roboto Mono"><Run Language="pl-pl" Text="(0, 0)"/></TextBlock>
        <TextBlock FontSize="15" Foreground="#FF4D96FF"  FontWeight="bold"   Canvas.Top="505" TextAlignment="Center" Canvas.Left="428" TextWrapping="WrapWithOverflow" Height="21" Width="86" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Roboto Mono"><Run Language="pl-pl" Text="(500, 500)"/></TextBlock>
        <TextBlock FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="517" TextAlignment="Center" Canvas.Left="186" TextWrapping="WrapWithOverflow" Height="20" Width="146" HorizontalAlignment="Center" VerticalAlignment="Top" FontFamily="Roboto Mono"><Run Language="pl-pl" Text="Pick a simulaton"/></TextBlock>
        <TextBlock Name="PStats" FontSize="15" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="30" Canvas.Left="-316" TextWrapping="WrapWithOverflow" Height="74" Width="262" HorizontalAlignment="Center" VerticalAlignment="Top" FontFamily="Roboto Mono" TextAlignment="Center"><Run Language="pl-pl" Text="You can stop time and right or left click with your mouse to track a specific particle, or you can try and catch it on the run."/></TextBlock>

        <!--Particle p1-->
        <Canvas Name="Particle1" HorizontalAlignment="Left" Height="236" Canvas.Left="-293" Canvas.Top="30" VerticalAlignment="Center" Width="344" Visibility="Hidden">
            <TextBlock x:Name="p1Text" FontSize="20" Foreground="White" FontWeight="DemiBold" TextAlignment="Left"  TextWrapping="WrapWithOverflow" Height="31" Width="71" Canvas.Left="59" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="Particle"/></TextBlock>
            <TextBlock  FontSize="20" Foreground="#FFFFD93D"  FontWeight="bold" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="31" Width="50" Canvas.Left="135" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="p1"/></TextBlock>
            <Ellipse x:Name="ParticleIcon" Width="54" Height="54" Stroke="#FF4D96FF" StrokeThickness="2" Canvas.Top="50" Canvas.Left="84" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Ellipse x:Name="ParticleIcon_Copy" Fill="#FF4D96FF" Width="12" Height="13" StrokeThickness="2" Canvas.Top="70" Canvas.Left="105" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Line X1="0" X2="26" Stroke="#FF4D96FF" StrokeThickness="2" Canvas.Top="77" Canvas.Left="111" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <Line X1="0" X2="40" Y1="0" Y2="40" StrokeThickness="2" Canvas.Top="37" Canvas.Left="70" HorizontalAlignment="Left" VerticalAlignment="Top" >
                <Line.Stroke>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#00000000" Offset="0.848"/>
                        <GradientStop Color="#FFFF6B6B" Offset="0.583"/>
                    </LinearGradientBrush>
                </Line.Stroke>
                <Line.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Line.Fill>
            </Line>
            <Line X1="0" X2="12" Stroke="#FFFF6B6B" StrokeThickness="2" Canvas.Top="37" Canvas.Left="70" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Line X1="0" X2="0" Y1="12" Stroke="#FFFF6B6B" StrokeThickness="2" Canvas.Left="70" Canvas.Top="36" HorizontalAlignment="Left" VerticalAlignment="Top"/>

            <TextBlock x:Name="p1PositionText"  FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="136" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Text="position"/></TextBlock>
            <TextBlock x:Name="p1VelocityText"  FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="161" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="velocity"/></TextBlock>
            <TextBlock x:Name="p1RadiusText"  FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="186" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="radius"/></TextBlock>
            <TextBlock x:Name="p1MassText"  FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="211" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="mass"/></TextBlock>

            <TextBlock x:Name="p1Position"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="136" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="283" Canvas.Left="61" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock x:Name="particleVelocity"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="161" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="215" Canvas.Left="61" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock x:Name="particleRadius"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="186" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="215" Canvas.Left="61" FontFamily="Roboto Mono" Text="" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock x:Name="particleMass"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="211" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="215" Canvas.Left="61" FontFamily="Roboto Mono" Text="" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        </Canvas>

        <!--Particle p2-->
        <Canvas Name="Particle2" HorizontalAlignment="Center" Height="236" Canvas.Left="-293" Canvas.Top="293" VerticalAlignment="Top" Width="344" Visibility="Hidden">
            <TextBlock  FontSize="20" Foreground="White" FontWeight="DemiBold" TextAlignment="Left"  TextWrapping="WrapWithOverflow" Height="31" Width="71" Canvas.Left="59" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="Particle"/></TextBlock>
            <TextBlock  FontSize="20" Foreground="#FFFFD93D"  FontWeight="bold" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="31" Width="50" Canvas.Left="135" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Text="p"/><Run Language="pl-pl" Text="2"/></TextBlock>
            <Ellipse  Width="54" Height="54" Stroke="#FF4D96FF" StrokeThickness="2" Canvas.Top="50" Canvas.Left="84" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Ellipse  Fill="#FF4D96FF" Width="12" Height="13" StrokeThickness="2" Canvas.Top="70" Canvas.Left="105" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Line X1="0" X2="26" Stroke="#FF4D96FF" StrokeThickness="2" Canvas.Top="77" Canvas.Left="111" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <Line X1="0" X2="40" Y1="0" Y2="40" StrokeThickness="2" Canvas.Top="37" Canvas.Left="70" HorizontalAlignment="Left" VerticalAlignment="Top" >
                <Line.Stroke>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#00000000" Offset="0.848"/>
                        <GradientStop Color="#FFFF6B6B" Offset="0.583"/>
                    </LinearGradientBrush>
                </Line.Stroke>
                <Line.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Line.Fill>
            </Line>
            <Line X1="0" X2="12" Stroke="#FFFF6B6B" StrokeThickness="2" Canvas.Top="37" Canvas.Left="70" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <Line X1="0" X2="0" Y1="12" Stroke="#FFFF6B6B" StrokeThickness="2" Canvas.Left="70" Canvas.Top="36" HorizontalAlignment="Left" VerticalAlignment="Top"/>

            <TextBlock   FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="136" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Text="position"/></TextBlock>
            <TextBlock   FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="161" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="velocity"/></TextBlock>
            <TextBlock   FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="186" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="radius"/></TextBlock>
            <TextBlock   FontSize="14" Foreground="White"  FontWeight="bold"   Canvas.Top="211" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="58" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"><Run Language="pl-pl" Text="mass"/></TextBlock>

            <TextBlock Name="particle2Position"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="136" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="283" Canvas.Left="61" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock Name="particle2Velocity"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="161" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="215" Canvas.Left="61" FontFamily="Roboto Mono" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock Name="particle2Radius"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="186" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="215" Canvas.Left="61" FontFamily="Roboto Mono" Text="" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <TextBlock Name="particle2Mass"  FontSize="14" Foreground="#FFFFD93D"  FontWeight="bold"   Canvas.Top="211" TextAlignment="left"  TextWrapping="WrapWithOverflow" Height="25" Width="215" Canvas.Left="61" FontFamily="Roboto Mono" Text="" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        </Canvas>

        <!--TimeButton-->
        <Button Click="TimeButton_Click" Name="TimeButton" Canvas.Left="66" Canvas.Top="542" Width="120" Height="22" Background="#FF4D96FF" BorderBrush="#FF4D96FF" Cursor="Hand" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" >Stop Time
        </Button>
        <Button Click="Generate_Click" Name="GenerateButton" Canvas.Left="332" Canvas.Top="542" Width="120" Height="22" Background="#FF4D96FF" BorderBrush="#FF4D96FF" Cursor="Hand" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" >Generate
        </Button>
        <!--Pick a simulation-->
        <ComboBox Name="PickSimulationCB" Style="{DynamicResource ComboBoxEventDrivenSimulation}" Canvas.Left="191" Canvas.Top="542" HorizontalAlignment="Left" VerticalAlignment="Center" Width="136" Background="#FF4D96FF" BorderBrush="#FF4D96FF" Foreground="#FF4D96FF" BorderThickness="0,0,0,0" OpacityMask="#FF4D96FF" SelectedIndex="0" FontWeight="Bold" Panel.ZIndex="2">
            <ComboBoxItem Background="#FF4D96FF" BorderBrush="#FF4D96FF" OpacityMask="#FF4D96FF" Foreground="#FF4D96FF">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="White">Ambient</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem Background="#FF4D96FF" BorderBrush="#FF4D96FF" Foreground="#FF4D96FF" OpacityMask="#FF4D96FF">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="White">Brownian Motion</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem Background="#FF4D96FF" BorderBrush="#FF4D96FF" Foreground="#FF4D96FF" OpacityMask="#FF4D96FF">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="White">Fast Particles</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem Background="#FF4D96FF" BorderBrush="#FF4D96FF" Foreground="#FF4D96FF" OpacityMask="#FF4D96FF">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="White">Billiard Sample</TextBlock>
                </StackPanel>
            </ComboBoxItem>
            <ComboBoxItem Background="#FF4D96FF" BorderBrush="#FF4D96FF" Foreground="#FF4D96FF" OpacityMask="#FF4D96FF">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Foreground="White">1600 Particles</TextBlock>
                </StackPanel>
            </ComboBoxItem>
        </ComboBox>
    </Canvas>
</Window>

<!--
/***************************************************************************************
*    Title:
<EventDrivenSimulation>
    *    Author:
    <Gregory Werner>
        *    Date:
        <16.04.2023>
            *    Code version:
            <1.0.0>
                *    Availability:
                <https://github.com/GHersik/EventDrivenSimulation>
                *
***************************************************************************************/
-->